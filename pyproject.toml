[tool.poetry]
authors = ["Frank Dai <yongjindai09@gmail.com>"]
description = ""
license = "MIT"
name = "python-backend-template"
readme = "README.md"
version = "0.0.0"
packages = [{include = "app"}]

[tool.poetry.dependencies]
alembic = "^1.12.0"
asyncpg = "^0.28.0"
fastapi = "^0.103.2"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
python = "^3.11"
python-dotenv = "^1.0.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.21"}
structlog = "^23.1.0"
tenacity = "^8.2.3"
uvicorn = "^0.23.2"
loguru = "^0.7.0" # needed?
python-jose = {extras = ["cryptography"], version = "^3.3.0"} # needed?
passlib = {extras = ["bcrypt"], version = "^1.7.4"} # needed?
python-multipart = "^0.0.6" # needed?
email-validator = "^2.0.0-post.0" # needed?

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
commitizen = "^3.10.0"
coverage = "^7.3.2"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
pytest = "^7.4.2"
pytest-asyncio = "^0.21.1"
pytest-bdd = "^6.1.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.1"
ruff = "^0.0.292"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[[tool.poetry.source]]
name = "tsinghua"
priority = "default"
url = "https://pypi.tuna.tsinghua.edu.cn/simple/"

[[tool.poetry.source]]
name = "aliyun"
priority = "primary"
url = "https://mirrors.aliyun.com/pypi/simple/"

[tool.coverage.paths]
source = ["app", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["app", "tests"]

[tool.coverage.report]
fail_under = 10
show_missing = true

[tool.mypy]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
# strict = true
warn_unreachable = true

[tool.black]
line-length = 120

[tool.ruff]
extend-exclude = [
  "alembic",
]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]
line-length = 120
select = [
  # "D", # pydocstyle
  "E", # pycodestyle errors
  "F", # pyflakes
  "W", # pycodestyle warnings
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
  "UP", # pyupgrade
  "S", # flake8-bandit
  "T20", # flake8-print
  "PT", # flake8-pytest-style
  "N", # pep8-naming
  "ASYNC", # flake8-async
  "Q", # flake8-quotes
  "PTH", # flake8-pathlib
]

[tool.ruff.isort]
section-order = ["future", "fastapi", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.isort.sections]
fastapi = ["fastapi"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
