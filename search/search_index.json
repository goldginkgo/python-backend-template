{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"python-backend-template","text":"<p>Python backend template using fastapi.</p>"},{"location":"development/usage/","title":"Usage","text":""},{"location":"development/usage/#pre-requisites","title":"Pre-requisites","text":"<p>Before getting started, please ensure that you have the following dependencies installed on your system:</p> <ul> <li>Docker: Installation guide</li> <li>Docker Compose: Installation guide</li> <li>Poetry: Installation guide</li> </ul>"},{"location":"development/usage/#getting-started","title":"Getting Started","text":"<p>To set up and run the app, please follow these steps:</p> <ol> <li> <p>Move to the directory where <code>pyproject.toml</code> is located:</p> </li> <li> <p>Install the dependencies:</p> </li> </ol> <p><code>shell    poetry install</code></p> <p>If you don't want to install the dev packages,    you can use the following command instead:    <code>shell    poetry install --without dev</code></p> <ol> <li>Activate the virtual environment:</li> </ol> <p><code>shell    poetry shell</code></p> <ol> <li>All necessary commands to start with the project can be found in Makefile.    To see all available commands, run the following command:</li> </ol> <p><code>shell    make help</code></p> <ol> <li>Build and start the Docker containers:</li> </ol> <p><code>shell    make build</code></p> <ol> <li> <p>Open your browser and go to <code>http://localhost:8000</code> to see the app running.</p> </li> <li> <p>Since there is only one SQLAlchemy model, you can create a new migration file by running the following command:</p> </li> </ol> <p><code>shell    chmod -R +x scripts/    ./scripts/autogenerate.sh \"user_init\"</code>    or    <code>shell    make autogenerate msg=\"user_init\"</code></p> <p>This will create a new migration file in <code>demo-api/alembic/versions/</code>.</p> <p>Since the <code>app</code> service inside <code>docker-compose.yaml</code> will automatically run the <code>alembic upgrade head</code> command whenever it starts, in order to apply the new migration, you just need to stop the containers and start them again. CTRL+C to stop the containers and then run the following command to start them again:    <code>shell    make up</code></p> <ol> <li> <p>To check the documentation of the API, go to <code>http://localhost:8000/docs</code>.</p> </li> <li> <p>To check the database you can use hosted <code>pgAdmin</code> tool, just go to <code>http://localhost:5050</code> and login with the credentials from <code>.env</code> file:</p> </li> <li>Email: <code>$PGADMIN_EMAIL</code></li> <li>Password: <code>$PGADMIN_PASSWORD</code></li> </ol>"}]}